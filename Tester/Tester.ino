/*
   ДАННЫЙ ПРОЕКТ ПОРТАТИВНОГО АНАЛИЗАТОРА СОСТОЯНИЯ ПОМЕЩЕНИЯ БЫЛ РАЗРАБОТАН
   ДЛЯ КОНТРОЛЯ АТМОСФЕРНОГО ДАВЛЕНИЯ, ТЕМПЕРАТУРЫ, ВЛАЖНОСТИ ВОЗДУХА, СОДЕРЖАНИЯ
   УГЛЕКИСЛОГО ГАЗА И ОСВЕЩЕННОСТИ.
   ЕГО ЦЕЛЬЮ ЯВЛЯЕТСЯ УПРОЩЕНИЕ МОНИТОРИНГА ПОДГОТОВЛЕННОСТИ УЧЕБНЫХ И ЖИЛЫХ ПОМЕЩЕНИЙ
   И ПРЕДСТАВЛЕНИЕ РЕКОМЕНДАЦИЙ ДЛЯ УВЕЛИЧЕНИЯ КОМФОРТНОСТИ НАХОЖДЕНИЯ И ДЕЯТЕЛЬНОСТИ
   ЛЮДЕЙ

   (c)2020
*/

// --------- ОБЩИЕ НАСТРОЙКИ ---------
#define DEBUG 1 // отладка 0 - выкл, 1 - вкл
#define DEBUG_MODE 1 // режим отладки, 0 - в монитор порта, 1 - в плоттер

#define BUTT_PIN 4 // пин кнопки управления

#define TH_PIN 2  // пин датчика температуры и влажности
#define TH_TYPE DHT11 // тип датчика (dht11, dht22, dht31 и т.п.)
#define CO2_PIN 0  // пин датчика СО2
#define LIGHT_PIN A1  // пин считывания освещенности

#define MIN_TEMP 22   // минимальная комфортная температура (в цельсиях)
#define MAX_TEMP 29   // максимальная комфортная температура (в цельсиях)

#define MIN_HUM 40      // минимальная комфортная влажность
#define MAX_HUM 75      // максимальная комфортная влажность

#define MIN_CARB 380    // минимальный комфортный уровень углекислого газа
#define MID_CARB 600    // предел незначительного превышения уровня углекислого газа
#define MAX_CARB 1000   // верхняя граница превышения концентрации углекислого газа

#define MIN_LIGHT 500   // минимальный комфортный уровень освещенности

// --------- РАСШИРЕННЫЕ НАСТРОЙКИ ---------
#define PAGE_NUM 3  // количество страниц в устройстве, на случай модернизации

#define FILTER_STEP 5 // шаг фильтрации бегущего среднего
#define FILTER_COEF 0.05  //  коэффициент фильтрации
#define LUX_CORRECTION_COEFFICIENT 1  // коэффициент корректритовки значения освещенности

// таймер
#define EVERY_MS(VALUE) \
  static uint32_t TIMER;\
  bool FLAG = millis() - TIMER >= (VALUE);\
  if (FLAG) TIMER = millis();\
  if (FLAG)

// --------- ИСПОЛЬЗУЕМЫЕ БИБЛИОТЕКИ ---------
#include <Wire.h>   // подключение библиотеки для работы по протоколу I2C

#include <LiquidCrystal_I2C.h>  // подключение библиотеки для работы с экраном
LiquidCrystal_I2C lcd(0x38, 20, 4); // создание объекта экрана

#include <DHT.h>  // подключение библиотек для работы с датчиком температуры и влажности
#include <DHT_U.h>
DHT dht(TH_PIN, TH_TYPE);  // создание объекта датчика

#include <Adafruit_BMP085.h> // подключение библиотеки для работы с датчиком давления
Adafruit_BMP085 bmp; // создание объекта датчика

#include <TroykaMQ.h> // подключение библиотеки для работы с датчиком СО2
MQ135 mq135(CO2_PIN); // создание объекта датчика

#include <TroykaLight.h> // подключение библиотеки для работы с датчиком освещенности
TroykaLight light(LIGHT_PIN); // создание объекта

// ------------ ГЛОБАЛЬНЫЕ ПЕРЕМЕННЫЕ ---------
// массивы байтов для отображения дополнительных символов
byte ru[] = {1, 3, 29, 1, 1, 9, 9, 17};
byte lu[] = {0, 0, 0, 3, 4, 8, 8, 8};
byte ld[] = {8, 9, 10, 7, 8, 16, 16, 16};
byte rd[] = {2, 2, 4, 24, 0, 0, 0, 0};
byte cloud[] = {};
byte sun[] = {};

boolean flag; // переменная - флажок для защиты от дребезга контактов
byte old_page;  // переменная, хранящая номер страницы до переключения
byte new_page;  // переменная, хранящая номер страницы после переключения
